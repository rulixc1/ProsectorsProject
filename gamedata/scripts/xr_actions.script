--[[ ----------------------------------------------------------------------------------------------
 File       : xr_actions.script (from xr_effects)
 Description: common functions for logic
 Copyright  : 2004 © GSC Game World
 Author     : GSC Game World
 Editors    : Karlan
--]] ----------------------------------------------------------------------------------------------

_DEBUG_ = true

function disable_ui()
    actor:hide_weapon()
    level.disable_input()
    level.hide_indicators()
end

function enable_ui()
    level.show_indicators()
    level.enable_input()
    actor:restore_weapon()
end

function run_cam_effector(_,obj, p)
    if not is_table(p) then return end
    if not is_string(p[1]) then return end
    local loop, num = false, nil
    if p[3] and p[3] == "true" then loop = true end
    log('[%s] get loop', p[1])
    if not loop then
        level.add_cam_effector("camera_effects\\" .. p[1] .. ".anm", generate_cam_effector_id(), false) 
        log('[%s] generate num', p[1])
        log('[%s] add_cam_effector', p[1])
        return
    end
    assert(math.is_positive(p[2]), 'math.is_positive(p[2]), positive number excepted, got %s', type(p[2]))
    num = p[2]
    log('[%s] get num', p[1])
    assert(not level.get_cam_effector(num), 'CAM effector with id [%s] already exist', num)
    level.add_cam_effector("camera_effects\\" .. p[1] .. ".anm", num, true)
    log('[%s] add_cam_effector', p[1])
end

function stop_cam_effector(_,obj, p)
    assert(math.is_positive(p[1]), 'math.is_positive(p[1]), positive number excepted, got %s', type(p[1]))
    level.remove_cam_effector(p[1])
end

function run_postprocess(_,obj, p)
    if not is_table(p) then return end
    if not is_string(p[1]) then return end
    local loop, num = false, nil
    if p[3] and p[3] == "true" then loop = true end
    log('[%s] get loop', p[1])
    if not loop then
        level.add_pp_effector(p[1] .. ".ppe", generate_pp_effector_id(), false)
        log('[%s] generate num', p[1])
        log('[%s] add_pp_effector', p[1])
        return
    end
    assert(math.is_positive(p[2]), 'math.is_positive(p[2]), positive number excepted, got %s', type(p[2]))
    num = p[2]
    log('[%s] get num', p[1])
    assert(not level.get_pp_effector(num), 'PP effector with id [%s] already exist', num)
    level.add_pp_effector(p[1] .. ".ppe", num, true)
    log('[%s] add_pp_effector', p[1])
end

function stop_postprocess(_,obj, p)
    assert(math.is_positive(p[1]), 'math.is_positive(p[1]), positive number excepted, got %s', type(p[1]))
    level.remove_pp_effector(p[1])
end

function run_tutorial(actor, npc, p)
    game.start_tutorial(p[1])
end
function run_tutorial_if_newbie(actor, npc, p)
    if has_info("esc_trader_newbie") then
        game.start_tutorial(p[1])
    end
end

function teleport_actor(actor, npc, p)
    local point = patrol(p[1])
    local look = patrol(p[2])
    
    actor:set_actor_position(point:point(0))
    local dir = look:point(0):sub(point:point(0))
    actor:set_actor_direction(-dir:getH())    
end

-----------------------------------------------------------------------------
--// с этими дропами надо понимать нужны или нет, есть куча более нормальных способов
--// TODO: доделать этот обрубок по алгоритму: передавать поинт или кординаты и по ним создавать поинт (зачем - не ясно), и туда дропать
local drop_point, drop_object = 0, 0
local function drop_object_item(item)
    drop_object:drop_item_and_teleport(item, drop_point)
end

function drop_actor_inventory(actor, npc, p)
    if p[1] then
        drop_point  = patrol(p[1]):point(0)
        drop_object = actor
        actor:inventory_for_each(drop_object_item)
    end
end

-- FIXME: drop_npc_inventory doesn't work
--// Karlan: теперь работает для нпс и ящиков
function drop_npc_inventory(actor, npc, p)
    if p[1] then
        drop_point  = patrol(p[1]):point(0)
        drop_object = npc
        npc:inventory_for_each(drop_object_item)
    end
end

function drop_npc_item(actor, npc, p)
    if p[1] then
        local item = npc:object(p[1])
        if item then
            npc:drop_item(item)
        end
    end
end

function drop_npc_items(actor, npc, p)
    local item = 0
    for i, v in pairs(p) do
        item = npc:object(v)
        if item then
            npc:drop_item(item)
        end
    end
end

function give_items(actor, npc, p) --// используется для того чтобы дать предметов, например безоружным по сюжету
    local pos, lv_id, gv_id, npc_id = npc:position(), npc:level_vertex_id(), npc:game_vertex_id(), npc:id()
    for i, v in pairs(p) do
        alife():create(v, pos, lv_id, gv_id, npc_id)
    end
end

function play_particle_on_path(actor, npc, p) --// отыгрывает с заданной вероятностю указанный партикл в каждой точке пути
    local name = p[1]
    local path = p[2]
    local point_prob = p[3]
    if name == nil or path == nil then
        return
    end

    if point_prob == nil then
        point_prob = 100
    end
    
    local path = patrol(path)
    local count = path:count()
    for a = 0,count-1,1 do   
        local particle = particles_object(name)
        if math.random(100) <= point_prob then
            particle:play_at_pos(path:point(a))
        end
    end   
end


-----------------------------------------------------------------------------
function monster_berserk(actor, npc)
--[[ 
Карлан: в движке относительно починил эту функцию от совсем нерабочей, теперь она навсегда врубает берсерка, но у разрабов как я понял задумывалось
врубать берсерка на определенное время, в принципе тоже фигня вопрос сделать. TODO: доделать берсерка как задумывалось.
--]]
    npc:berserk()
end

--[[
send_tip(news_id:sender:sender_id)
    1. news_id
    2. sender*
    3. sender_id*
    * - not necessary
--]]
function send_tip(actor, npc, p)
    manager_news.send_message(p[1], nil, p[2], nil, p[3])
end



--[[
Дать сталкеру небольшой пинок. Например чтоб скинуть его с возвышения.
параметры: actor, npc, p[direction,bone,power,impulse,reverse=false]
    1. direction - если строка, то считается, что это имя пути и в сторону
        первой точки производится толчек. Если же это число, то оно
        рассматривается как story_id персонажа от которого должен поступить хит.
    2. bone - строка. Имя кости, по которой наносится удар.
    3. power - сила удара
    4. impulse - импульс
    5. reverse (true/false) - изменение направления удара. по умолчанию false
--]]
function hit_npc(actor, npc, p)
    local h = hit()
    local rev = p[5] and p[5] == 'true'
    h.draftsman = npc
    h.type = hit.wound
    if type(p[1]) == 'number' then
        local hitter = level.object_by_sid(p[1])
        if not hitter then return end
        if rev then
            h.draftsman = hitter
            h.direction = hitter:position():sub(npc:position())
        else
            h.direction = npc:position():sub(hitter:position())
        end
    else
        if rev then
            h.draftsman = nil
            h.direction = npc:position():sub(patrol(p[1]):point(0))
        else
            h.direction = patrol(p[1]):point(0):sub(npc:position())
        end
    end
    h:bone(p[2])
    h.power = p[3]
    h.impulse = p[4]
    --printf("HIT EFFECT: (%s, %s,%d,%d) health(%s)", npc:name(), p[2], h.power, h.impulse, npc.health)
    npc:hit(h)
end

--[[
Дать обьекту, заданному story_id, хит.
параметры: actor, npc, p[sid,bone,power,impulse,hit_src=npc:position()]
    1. sid - story_id обьекта, по которому наносится хит.
    2. bone - строка. Имя кости, по которой наносится удар.
    3. power - сила удара
    4. impulse - импульс
    5. hit_src - если число, то рассматривается как story_id обьекта, со стороны
        которого наносится хит (он же является и инициатором хита), иначе это
        точка (waypoint), из которой по объекту наносится хит.
        Если не задано, то берется позиция обьекта, из которого была вызвана
        данная функция.
--]]
function hit_obj(actor, npc, p)
    local h = hit()
    local obj = level.object_by_sid(p[1])
    local sid = nil

    if not obj then
--        abort("HIT_OBJ [%s]. Target object does not exist", npc:name())
        return
    end

    h:bone(p[2])
    h.power = p[3]
    h.impulse = p[4]

    if p[5] then
        sid = tonumber(p[5])
        if sid then
            sid = level.object_by_sid(sid)
            if sid then
                h.direction = vector():sub(sid:position(), obj:position())
            end
        end
        if not sid then
            h.direction = vector():sub(patrol(p[5]):point(0), obj:position())
        end
    else
        h.direction = vector():sub(npc:position(), obj:position())
    end

    h.draftsman = sid or npc
    h.type = hit.wound
    obj:hit(h)
end

-- играть звук в голове актёра
--// Карлан: второй параметр - задержка
function play_snd(actor, npc, p)
    if p[1] then
        local snd_obj = m_sound.get_safe_sound_object(p[1])
        --snd_obj:play(actor, p[2] or 0, sound_object.s2d)
        snd_obj:play_no_feedback(actor, sound_object.s2d, p[2] or 0, vector(), 1.0)
    end
end

-- играть звук от указанного объекта
function play_snd_from_obj(actor, npc, p)
    if p[1] and p[2] then
        local snd_obj = m_sound.get_safe_sound_object(p[2])
        local obj     = level.object_by_sid(p[1])
        if obj ~= nil then
           printf("can't find object with story id %s", tostring(p[1]))
        
--        snd_obj:play_at_pos(obj, obj:position(), sound_object.s3d)
        snd_obj:play_no_feedback(obj, sound_object.s3d, 0, obj:position(), 1.0)
        end
    end
end

-- играть звук от указанного объекта
function play_snd_now(actor, npc, p)
    m_sound.set_sound_play(npc, p[1])
end

-- корректно закрыть закрыть текущий звук
function stop_sound_play(actor, npc, p)
    m_sound.stop_sound_play(npc)
end


-- прибавить к указанному счётчику актёра 1
function inc_counter(actor, npc, p)
    if p[1] then
        printf( "inc_counter '%s'", p[1] )
        xr_logic.pstor_store(actor, p[1], xr_logic.pstor_retrieve(actor, p[1], 0) + 1)
    end
end

function dec_counter(actor, npc, p)
    if p[1] then
        printf( "dec_counter '%s'", p[1] )
        xr_logic.pstor_store(actor, p[1], xr_logic.pstor_retrieve(actor, p[1], 0) - 1)
    end
end


-- переключает камеру на монстра или на актёра
function alien_control( actor, npc, p ) --// Карлан: дефакто мусор, но кстати работает, при доработке переселение душ можно сделать, если бы проект делался где-то в кащенко
    printf( "alien_control(%s)", p[1] )
    npc:set_alien_control( p[1] == "true" )
end

-- слелать актёра врагом персонажам, которые в онлайне под указанным смартом
function set_gulag_enemy_actor( actor, npc, p )
    if p[1] then
        m_gulag.setGulagEnemy(p[1], actor)
    end
end

-- принудительное обновление смарта. Использовать только в КРАЙНИХ случаях!!!
-- каждое использование согласовывать со мной. Чугай.
function smart_terrain_force_update(actor, npc, p)
    printf( "xr_actions.smart_terrain_force_update called" )

    if p[1] then
        local gulag = m_gulag.get_gulag(p[1])
        if gulag then
            gulag.smrttrn:update()
        end
    end
end

------------------------------------------------------------------------------------------------------------------------

-- постпроцесс и влияние удара в морду
function actor_punch(npc)
    if actor:position():distance_to_sqr(npc:position()) > 4 then
        return
    end

    local active_slot = actor:active_slot()
    local active_item = actor:active_item()
    if active_item and active_slot == RIFLE_SLOT then
        actor:drop_item(active_item)
    end

    set_disable_input_time(3)
    local snd_obj = m_sound.get_safe_sound_object([[affects\hit_fist]])
    snd_obj:play_no_feedback(actor, sound_object.s2d, 0, vector(), 1.0)
	-- assert(not level.get_cam_effector(999)) --// Karlan: не проверял, но теоретически полетим если сразу два раза подряд в пятак получим, так что тут вырубаю
    level.add_cam_effector("camera_effects\\fusker.anm", 999, false, "")        
end

-- забывание обиды
function clearAbuse(npc)
    printf("CLEAR_ABUSE")
    ai_abuse.clear_abuse(npc)
end


---Выключение динамической лампочки (hanging_lamp)
function turn_off(actor, npc, p)
    local obj = level.object_by_sid(p[1])

    if not obj then
        abort("TURN_OFF [%s]. Target object does not exist", npc:name())
        return
    end
    obj:get_hanging_lamp():turn_off()
end
function turn_off_object(actor, npc)
    npc:get_hanging_lamp():turn_off()
end

---Включение динамической лампочки (hanging_lamp)
function turn_on(actor, npc, p)
    local obj = level.object_by_sid(p[1])

    if not obj then
        abort("TURN_ON [%s]. Target object does not exist", npc:name())
        return
    end
    obj:get_hanging_lamp():turn_on()
end
function turn_on_object(actor, npc)
    npc:get_hanging_lamp():turn_on()
end

------------------------------------------------------------------------------------------------

-- Кто-то из участников сценки вступил в бой - теперь нужно пообижать всех на всех
function gar_dm_bandits_fight(actor, npc)
    local novice = level.object_by_sid(104)
    if not novice or not novice:alive() then
        return
    end

    local ignore_actor = distance_between(actor, novice) > 25

    local bandit1 = level.object_by_sid(101)
    if bandit1 then
        novice:set_relation(game_object.enemy, bandit1)
        if not ignore_actor then
            bandit1:set_relation(game_object.enemy, actor)
        end
        bandit1:set_relation(game_object.enemy, novice)
    end

    local bandit2 = level.object_by_sid(102)
    if bandit2 then
        novice:set_relation(game_object.enemy, bandit2)
        if not ignore_actor then
            bandit2:set_relation(game_object.enemy, actor)
        end
        bandit2:set_relation(game_object.enemy, novice)
    end

    local bandit3 = level.object_by_sid(103)
    if bandit3 then
        novice:set_relation(game_object.enemy, bandit3)
        if not ignore_actor then
            bandit3:set_relation(game_object.enemy, actor)
        end
        bandit3:set_relation(game_object.enemy, novice)
    end
end

function gar_dm_bandit_demand(actor, npc)
    printf("_bp: gar_dm_bandit_demand: actor=%s", actor:name())

    if has_info("gar_dm_bandit1_demand") or
       has_info("gar_dm_bandit2_demand") or
       has_info("gar_dm_bandit3_demand") then
        return
    end
    local r = math.random(3)
    if r == 1 then
        give_info("gar_dm_bandit1_demand")
    elseif r == 2 then
        give_info("gar_dm_bandit2_demand")
    else
        give_info("gar_dm_bandit3_demand")
    end
end

function gar_send_dymon_alarm(actor, npc)
    if has_info("gar_start_graveyard") then
        manager_news.send_message("tips_gar_hellcar_alarm", 2, "stalker", 10000)
    end
end

function gar_direction_fire(actor, npc)
    if has_info("gar_hellcar_help") and not has_info("gar_counter_fire") and not has_info("gar_open_fire") then
        manager_news.send_message("gar_direction_fire", 0, "stalker", 0)
    end
end

function gar_hellcar_victory(actor, npc)
    if not has_info("gar_hellcar_tips_end") and has_info("gar_hellcar_help") and not has_info("gar_hellcar_thanks") then
        manager_news.send_message("gar_hellcar_victory", 0, "stalker", 0)
        give_info("gar_hellcar_tips_end")
    end
end

function gar_seryi_victory(actor, npc)
        manager_news.send_message("gar_hellcar_victory", 0, "stalker", 0)
end

function gar_boars_counter(actor, npc)
    local c = xr_logic.pstor_retrieve(actor, "gar_boars_counter", 0)
    if c < 1 then
        manager_news.send_message("gar_actor_looser", 0, "dolg", 0)
    else
        manager_news.send_message("gar_actor_normal", 0, "dolg", 0)
        give_info("gar_kill_boars_request")
    end
end

--' Escape

function esc_direction_fire(actor, npc)
    if not has_info("esc_fanat_die") then
        manager_news.send_message("esc_direction_fire", 7, "stalker", 0)
    end
end

function esc_fanat_victory(actor, npc)
    if has_info("escape_lager_killers_die") and not has_info("esc_fanat_die") and not has_info("escape_lager_complete") then
        manager_news.send_message("esc_fanat_victory", 0, "stalker", 10000)
    end
end

function esc_return_dv(actor, npc)
        manager_news.send_message("esc_return_dv", 0, "trader", 10)
end



-- function esc_lager_forgive_actor(actor, npc)
--    m_gulag.setGulagNeutral("esc_lager", actor)
-- end

-- function esc_lager_promise_actor(actor, npc)
--    local gulag = m_gulag.get_gulag_by_name ("esc_lager")
--    if (gulag) then
--       gulag:set_relation (game_object.neutral, actor)
--    end  
-- end

-- function esc_lager_rage_actor(actor, npc)
--    local gulag = m_gulag.get_gulag_by_name ("esc_lager")
--    if (gulag) then
--       gulag:set_relation (game_object.enemy, actor)
--    end  
-- end

--' garbage

--function gar_mapspot_blockpost()
--    add_map_spot_by_sid(115, "ui_pda2_quest_npc_location", "gar_dolg_blokpost_leader_name") --// Карлан: и все равно мерзость, такое надо уводить куда то в боллее другие края
--end


    
function actor_friend(actor, npc)
    printf("_bp: xr_actions: actor_friend(): npc='%s': time=%d", npc:name(), time_global())
    npc:set_relation(game_object.friend, actor)
end

function actor_neutral(actor, npc)
    npc:set_relation(game_object.neutral, actor)
end

function actor_enemy(actor, npc)
    npc:set_relation(game_object.enemy, actor)
end

-- Вызов этой функции отключит обработчик [combat] боя для персонажа.
-- Используется в случаях, когда все необходимые действия, такие как переключение на другую секцию,
-- уже выполнены, и повторно выполнять их во время боя нельзя (а условия секции [combat] проверяются на каждом
-- апдейте, когда персонаж в бою, если, конечно, не отключены вызовом этой функции).
function disable_combat_handler(actor, npc)
    if db.storage[npc:id()].combat then
        db.storage[npc:id()].combat.enabled = false
    end
    
    if db.storage[npc:id()].mob_combat then
        db.storage[npc:id()].mob_combat.enabled = false
    end
end

-- Вызов этой функции отключит обработчик [combat_ignore] перехвата боя для персонажа.
function disable_combat_ignore_handler(actor, npc)
    if db.storage[npc:id()].combat_ignore then
        db.storage[npc:id()].combat_ignore.enabled = false
    end
end

function mil_paul_frost_dead (actor, npc)     
    local gulag = m_gulag.get_gulag_by_name ("mil_freedom")
    if (gulag) then
       gulag:set_relation (game_object.neutral, actor)
    end   
end

function military_dolg_dead (actor, npc)
--// Karlan: mil_dolg_killed_by_actor вообще не нужна если честно, никак не учитывается, но я оставил, потом инфопоршень еще один допишу и за это дополнительный магарыч дам
    local mil_dolg_killed, mil_dolg_killed_by_actor = read_pstor("mil_dolg_killed", 0), read_pstor("mil_dolg_killed_by_actor", false)
    
    mil_dolg_killed = mil_dolg_killed + 1
    write_pstor("mil_dolg_killed", mil_dolg_killed)
    log('mil_dolg_killed', mil_dolg_killed+1)
    --if mil_dolg_killed_by_actor == false and db.storage[npc:id()].death.killer == actor_id then
    if mil_dolg_killed_by_actor == false and read_pstor('killer_id', nil, npc) == actor_id then
        write_pstor("mil_dolg_killed_by_actor", true)
        log('mil_dolg_killed_by_actor true')
    end
    
    if mil_dolg_killed == 8 then
        remove_pstor("mil_dolg_killed")
        give_info("mil_dolg_dead")
        log('mil_dolg_killed remove')
        if read_pstor("mil_dolg_killed_by_actor", false) then
            log('mil_dolg_killed_by_actor true final')
            --// тут выдать поршень для доп. награды, можно напрямую првоерять и удалять там где выдаем, здесь не обзательно
        end
        remove_pstor("mil_dolg_killed_by_actor")
        log('mil_dolg_killed_by_actor remove')
    end   
end

function mil_patrol_death_check (actor, npc)
    if has_info("mil_patrol_man1_dead") and has_info("mil_patrol_man2_dead") and has_info("mil_patrol_man3_dead") then
       give_info ("mil_patrol_dead") 
    end
end

function search_gulag_job(actor, npc)
    m_gulag.resetJob(npc)
end


--------------------------------------------------------- 
-- BAR-ROSTOK
--------------------------------------------------------- 

function bar_freedom_spam_1(actor, npc)
    manager_news.send_message("bar_freedom_spam_1", nil, "killer", nil, 509)
end
function bar_freedom_spam_2(actor, npc)
    manager_news.send_message("bar_freedom_spam_2", nil, "killer", nil, 509)
end
function bar_freedom_spam_3(actor, npc)
    manager_news.send_message("bar_freedom_spam_3", nil, "killer", nil, 509)
end
function bar_freedom_spam_4(actor, npc)
    manager_news.send_message("bar_freedom_spam_4", nil, "killer", nil, 509)
end
function bar_ecolog_spam_1(actor, npc)
    manager_news.send_message("bar_ecolog_spam_1", nil, "ecolog", nil, 503)
end
function bar_ecolog_spam_2(actor, npc)
    manager_news.send_message("bar_ecolog_spam_2", nil, "ecolog", nil, 503)
end
function bar_ecolog_spam_3(actor, npc)
    manager_news.send_message("bar_ecolog_spam_3", nil, "ecolog", nil, 503)
end
function bar_ecolog_spam_4(actor, npc)
    manager_news.send_message("bar_ecolog_spam_4", nil, "ecolog", nil, 503)
end
function bar_ecolog_spam_5(actor, npc)
    if not has_info("bar_heli_scene_volkodav_die") and not has_info("bar_ecolog_saw_chase") then
        manager_news.send_message("bar_freedom_chase", nil, "ecolog", nil, 503)
        give_info("bar_ecolog_saw_chase")
    end
end
function bar_ecolog_hit(actor, npc)
    manager_news.send_message("bar_ecolog_hit", nil, "ecolog", nil, 503)
end
function bar_freedom_spam_5(actor, npc)
    if not has_info("bar_heli_scene_volkodav_die") then
        manager_news.send_message("bar_ecolog_escape", nil, "killer", nil, 509)
    end
end
function bar_freedom_angry_actor(actor,npc)
    if has_info("bar_ecolog_crush_actor_enemy")
    then
        npc:set_relation(game_object.enemy, actor)
    end
end
function bar_freedom_defence_ecolog(actor,npc)
    manager_news.send_message("bar_ecolog_attack", nil, "ecolog", nil, 503)
end        
function bar_freedom_angry_actor_notify(actor,npc)
    if has_info("bar_ecolog_crush_actor_enemy") then
        manager_news.send_message("bar_freedom_attack_spy", 4, "killer", nil, 509)
    end
end
function bar_crush_heli_start(actor,npc)
    manager_news.send_message("bar_ecolog_crush_start_heli", nil, "ecolog", nil, 503)
end
function rostok_kruglov_tip_1(actor,npc)
    manager_news.send_message("rostok_kruglov_spam_1", nil, "ecolog", nil, 503)
end
function rostok_kruglov_tip_2(actor,npc)
    manager_news.send_message("rostok_kruglov_spam_2", nil, "ecolog", nil, 503)
    add_map_spot_by_sid(597, "volkodav_location", "rostok_banda_volkodava")
end
--// Karlan: я тут чуть-чуть перепишу
function rostok_kruglov_attract_1(actor,npc)
    m_sound.set_sound_play(npc, "kruglov_stop_enemy_1")
--    manager_news.send_sound_without_text("bar_freedom_chase")
    -- local tips_sound = manager_news.send_tip_nosound(actor, "bar_freedom_chase", 0, "ecolog")
    -- if tips_sound ~= nil then
        --' Играем звук забитый
        -- tips_sound:play(actor, 0, sound_object.s2d)
    -- end
end
function rostok_kruglov_attract_2(actor,npc)
    m_sound.set_sound_play(npc, "kruglov_stop_enemy_2",3)
--    manager_news.send_sound_without_text("rostok_kruglov_follow_2")
    -- local tips_sound = manager_news.send_tip_nosound(actor, "rostok_kruglov_follow_2",3000, "ecolog")
    -- if tips_sound ~= nil then
        --' Играем звук забитый
        -- tips_sound:play(actor, 0, sound_object.s2d)
    -- end
end
function rostok_kruglov_ambush(actor,npc)
    m_sound.set_sound_play(npc, "rostok_kruglov_help_5")
--    manager_news.send_sound_without_text("rostok_kruglov_follow_3")
    -- local tips_sound = manager_news.send_tip_nosound(actor, "rostok_kruglov_follow_3", 0, "ecolog")
    -- if tips_sound ~= nil then
        --' Играем звук забитый
        -- tips_sound:play(actor, 0, sound_object.s2d)
    -- end
end
function bar_crush_heli_down(actor,npc)
    manager_news.send_message("bar_ecolog_crush_heli_down", 1, "killer", nil, 509)
end
function bar_ecolog_crush_attract_actor(actor,npc)
    if not has_info("bar_heli_scene_professor_die") then
        manager_news.send_message("bar_ecolog_crush_attract_actor", nil, "ecolog")
    end
end
function bar_freedom_attack_attract_actor(actor,npc)
        manager_news.send_message("bar_freedom_attack_attract_actor", nil, "killer")
    end
function bar_freedom_attack_start(actor,npc)
        if not has_info("bar_freedom_defence_ecolog") then
            manager_news.send_message("bar_freedom_attack", nil, "killer", nil, 509)
            give_info("bar_freedom_defence_ecolog")
        end
    end
function bar_arena_hit(actor, npc)
    local h = hit()
    h.power = 0.01
    h.direction = npc:direction()
    h.draftsman = actor 
    h.impulse = 1
    h.type = hit.wound
    npc:hit(h)
end
function esc_hit_from_fox(actor, npc)
    local fox = level.object_by_sid (005)
    if fox == nil then
        return
    end
    local h = hit()
    h.power = 0.01
    h.direction = npc:direction()
    h.draftsman = fox 
    h.impulse = 1
    h.type = hit.wound
    npc:hit(h)
end

function bar_territory_logic(actor, npc)
    local level = level.name()
    if     level == "l05_bar" then
        if m_talks.actor_in_dolg(actor,npc) then
            if has_info("bar_dolg_territory_kill") then
                manager_news.send_message("bar_territory_dolg_kill", nil, "dolg", nil, 507)
                m_gulag.setGulagEnemy("bar_dolg_general", actor)
                m_gulag.setGulagEnemy("bar_dolg_veterans", actor)
                m_gulag.setGulagEnemy("bar_dolg_bunker", actor)
                m_gulag.setGulagEnemy("bar_zastava", actor)
                m_gulag.setGulagEnemy("bar_zastava_2", actor)
                m_gulag.setGulagEnemy("bar_visitors", actor)
                return
            end
            if has_info("bar_dolg_territory_3_hit") then
                manager_news.send_message("bar_territory_dolg_3_hit", nil, "dolg", nil, 507)
                m_gulag.setGulagEnemy("bar_dolg_general", actor)
                m_gulag.setGulagEnemy("bar_dolg_veterans", actor)
                m_gulag.setGulagEnemy("bar_dolg_bunker", actor)
                m_gulag.setGulagEnemy("bar_zastava", actor)
                m_gulag.setGulagEnemy("bar_zastava_2", actor)
                return
            end
            if has_info("bar_dolg_territory_2_hit") then
                manager_news.send_message("bar_territory_dolg_2_hit", nil, "dolg", nil, 507)
                return
            end
            if has_info("bar_dolg_territory_1_hit") then
                manager_news.send_message("bar_territory_dolg_1_hit", nil, "dolg", nil, 507)
                return
            end
        else
            if has_info("bar_dolg_territory_kill") then
                give_info("bar_territory_nodolg_kill")
                manager_news.send_message("bar_territory_nodolg_kill", nil, "dolg", nil, 507)
                m_gulag.setGulagEnemy("bar_dolg_general", actor)
                m_gulag.setGulagEnemy("bar_dolg_veterans", actor)
                m_gulag.setGulagEnemy("bar_dolg_bunker", actor)
                m_gulag.setGulagEnemy("bar_zastava", actor)
                m_gulag.setGulagEnemy("bar_zastava_2", actor)
                m_gulag.setGulagEnemy("bar_visitors", actor)
                return
            end
            if has_info("bar_dolg_territory_2_hit") then
                give_info("bar_territory_nodolg_2_hit")
                manager_news.send_message("bar_territory_nodolg_2_hit", nil, "dolg", nil, 507)
                m_gulag.setGulagEnemy("bar_dolg_general", actor)
                m_gulag.setGulagEnemy("bar_dolg_veterans", actor)
                m_gulag.setGulagEnemy("bar_dolg_bunker", actor)
                m_gulag.setGulagEnemy("bar_zastava", actor)
                m_gulag.setGulagEnemy("bar_zastava_2", actor)
                m_gulag.setGulagEnemy("bar_visitors", actor)
                return
            end
            if has_info("bar_dolg_territory_1_hit") then
                give_info("bar_territory_nodolg_1_hit")
                manager_news.send_message("bar_territory_nodolg_1_hit", nil, "dolg", nil, 507)
                return
            end    
        end
    end
    return
end

function bar_psih_come(actor, npc)
    manager_news.send_message("bar_psih_come", nil, "barman")
end

function bar_actor_is_enemy(actor, npc)
            m_gulag.setGulagEnemy("bar_dolg_general", actor)
            m_gulag.setGulagEnemy("bar_dolg_veterans", actor)
            m_gulag.setGulagEnemy("bar_dolg_bunker", actor)
            m_gulag.setGulagEnemy("bar_visitors", actor)
end

local function transfer_object_item(item)
    out_object:transfer_item(item, in_object)
end
function bar_arena_teleport ( actor, npc)

    inv_box_1 = level.object_by_sid (573)

    out_object = actor
    in_object  = inv_box_1
        actor:inventory_for_each(transfer_object_item) 

    local spawn_items = {}    

    if    has_info("bar_arena_fight_1") then 
        table.insert(spawn_items, "wpn_pm")
        table.insert(spawn_items, "ammo_9x18_pmm")
        table.insert(spawn_items, "ammo_9x18_pmm")
        table.insert(spawn_items, "wpn_knife")
    elseif    has_info("bar_arena_fight_2") then
        table.insert(spawn_items, "wpn_mp5")
        table.insert(spawn_items, "ammo_9x19_pbp")
        table.insert(spawn_items, "wpn_knife")        
    elseif    has_info("bar_arena_fight_3") then
        table.insert(spawn_items, "wpn_bm16")
        table.insert(spawn_items, "ammo_12x70_buck")
        table.insert(spawn_items, "ammo_12x70_buck")
        table.insert(spawn_items, "wpn_knife")
    elseif    has_info("bar_arena_fight_4") then            
        table.insert(spawn_items, "wpn_ak74")
        table.insert(spawn_items, "ammo_5.45x39_ap")
        table.insert(spawn_items, "ammo_5.45x39_ap")
        table.insert(spawn_items, "wpn_knife")
        table.insert(spawn_items, "bandage")
        table.insert(spawn_items, "bandage")
    elseif    has_info("bar_arena_fight_5") then    
        table.insert(spawn_items, "wpn_abakan")
        table.insert(spawn_items, "ammo_5.45x39_ap")
        table.insert(spawn_items, "ammo_5.45x39_ap")
        table.insert(spawn_items, "ammo_5.45x39_ap")
        table.insert(spawn_items, "wpn_knife")
        table.insert(spawn_items, "bandage")
        table.insert(spawn_items, "medkit")
        table.insert(spawn_items, "svoboda_light_outfit")
    elseif    has_info("bar_arena_fight_6") then
        table.insert(spawn_items, "wpn_groza")
        table.insert(spawn_items, "ammo_9x39_ap")
        table.insert(spawn_items, "ammo_9x39_ap")
        table.insert(spawn_items, "ammo_9x39_ap")
        table.insert(spawn_items, "wpn_knife")
        table.insert(spawn_items, "grenade_f1")
        table.insert(spawn_items, "specops_outfit")
    elseif    has_info("bar_arena_fight_7") then
        table.insert(spawn_items, "wpn_knife")
        table.insert(spawn_items, "bandage")
        table.insert(spawn_items, "grenade_f1")
        table.insert(spawn_items, "grenade_f1")
        table.insert(spawn_items, "grenade_f1")
        table.insert(spawn_items, "grenade_f1")
    elseif    has_info("bar_arena_fight_8") then
        table.insert(spawn_items, "wpn_g36")
        table.insert(spawn_items, "ammo_5.56x45_ap")
        table.insert(spawn_items, "ammo_5.56x45_ap")
        table.insert(spawn_items, "ammo_5.56x45_ap")
        table.insert(spawn_items, "ammo_5.56x45_ap")
        table.insert(spawn_items, "wpn_knife")
    end
    
    local k,v = 0,0
    
    for k,v in pairs(spawn_items) do
        alife():create(v,    
                        actor:position(),
                        actor:level_vertex_id(),    
                        actor:game_vertex_id(), 
                        actor_id)
    end    
    
end

function bar_arena_weapon_slot ()
    if has_info("bar_arena_fight_1") then  
        actor:activate_slot(PISTOL_SLOT)
    else 
        actor:activate_slot(RIFLE_SLOT)
    end
end

function bar_arena_teleport_2 ( actor, npc)
		assert(not level.get_pp_effector(234))
		level.add_pp_effector ("blink.ppe", 234, false)                
    
        actor:set_actor_position(patrol("t_walk_2"):point(0))
        local dir = patrol("t_look_2"):point(0):sub(patrol("t_walk_2"):point(0))
        actor:set_actor_direction(-dir:getH())
    
    inv_box_2 = level.object_by_sid (574)

    out_object = actor
    in_object  = inv_box_2
        actor:inventory_for_each(transfer_object_item) 
end

function barman_give_extra_task (actor, npc)
    if has_info ("agroprom_military_case_done") and not has_info ("bar_darklab_document_start") then
        give_info("barman_job_1")
        return
    elseif has_info ("bar_darklab_document_done") and not has_info ("bar_x16_documents_start") then
        give_info("barman_job_2")
        return
    elseif has_info ("bar_x16_documents_done") and not has_info ("bar_deactivate_radar_start") then
        give_info("barman_job_3")
        return
    end
    return    
end

function trader_extra_task (actor, npc)
    if has_info ("esc_serious_talk") and not has_info ("agroprom_military_case") then
        give_info("trader_job")
        return
    end
    return
end

function scientist_extra_task (actor, npc)
    if has_info ("yan_find_scientist_done") and not has_info ("yan_find_vasilyev_start") then
        give_info("scientist_job")
        return
    end
    return
end

function military_max_dead (actor, npc) --// rudiment? need check
end

function mil_scull_news (actor, npc)
end

function mil_sniper_dead (actor, npc)
    if has_info("mil_dolg_final_task") then
       remove_map_spot_by_sid(npc:story_id (), "mil_sniper_location")
    end       
end

function mil_actor_enemy_set (actor, npc)
    local sniper = level.object_by_sid (704)
    if sniper ~= nil then
       sniper:set_relation (game_object.enemy, actor) 
    end   
    --m_gulag.setGulagRelation ("mil_freedom", game_object.enemy, actor)    
end


function mil_actor_enemy_reset (actor, npc)
    local sniper = level.object_by_sid (704)
    if sniper ~= nil then
       sniper:set_relation (game_object.neutral, actor) 
    end   
    --m_gulag.setGulagRelation ("mil_freedom", game_object.neutral, actor)    
end

function mil_bomb_explode (actor, npc)
    local source = level.object_by_sid(723)
    if source == nil then
       warning ("Bomb with story id MIL_BOMB not found")
       return
    end

    local h = hit ();
    h.power = 1000000;
    h.direction = vector():set( 1, 0, 0 );
    h.impulse = 1;
    h.draftsman = source;
    h.type = hit.chemical_burn;
    source:hit (h);
    
    source:explode()
end

function mil_set_alarm (actor, npc)
    printf("pl:millitary base is under attack!!!!!!!")
    give_info ("mil_freedom_under_attack")
    
    local skull = level.object_by_sid (708)
    if skull == nil then 
       return 
    end

    this.set_stalker_enemy (702, skull)     -- hit to Lukash
    this.set_stalker_enemy (707, skull)     -- hit to Max
    this.set_stalker_enemy (730, skull)     -- hit to Sniper1
    this.set_stalker_enemy (731, skull)     -- hit to Sniper2
    this.set_stalker_enemy (732, skull)     -- hit to Sniper3
end

function set_stalker_enemy (sid, draftsman)
    local npc = level.object_by_sid (sid)
    if npc == nil or npc:alive () == false then
       return 
    end    
    local h = hit ()
    h.power = 0
    h.direction = vector():set( 1, 0, 0 )
    h.impulse = 0
    h.draftsman = draftsman
    h.type = hit.strike
    npc:hit (h)
end



function mil_remove_cook_map_spot (actor, npc)
    remove_map_spot_by_sid(728, "mil_cook_location")
end

function mil_emeny_nearest (actor, npc)
    if actor == nil or actor:alive () == false then
       return
    end    

    local gulag = m_gulag.get_gulag_by_name ("mil_freedom")
    if gulag == nil then return end

    if gulag:npc_is_enemy_to_anybody(actor) then
       give_info ("mil_enemy_nearest")
    end
end


function mil_cap_mapspot (actor, npc)
    local cap = level.object_by_sid (724)
    if cap == nil or cap:alive () == false then
       return 
    end    
    
    if not has_info("mil_fblockpost_spot_set") then
       give_info ("mil_fblockpost_spot") 
       give_info ("mil_fblockpost_spot_set")
       add_map_spot_by_sid(724, "mil_fblockpost_location")
    end
end

function mil_cap_mapspot_remove (stalker1, stalker2)
    if has_info("mil_fblockpost_spot") then
       remove_map_spot_by_sid(724, "mil_fblockpost_location")
       disable_info("mil_fblockpost_spot_remove")
    end      
end

function set_actor_enemy_for_freedom (actor, npc)
    m_gulag.setGulagEnemy ("mil_freedom", actor)
end


-- GARBAGE
--[[ не используется, убрать?
function gar_send_dolg_warning()
    if actor then
        if m_gulag.getGulagPopulation("gar_dolg") > 0 then
            manager_news.send_message("gar_dolg_blokpost_warning", 0, "dolg")
        end
    end
end
]]

-------------------------------------------------------------------------------------
-- Функции для DarkValley
-------------------------------------------------------------------------------------
function val_escort_guard_death(actor, npc)
    --printf("xr_actions <val_escort_guard_death>: %s.", npc:name())
    local idx = string.sub(npc:name(), -1)
    local killer_id = read_pstor('killer_id', INVALID_ID, npc)

    disable_info("val_escort_guard" .. idx .. "_combat")
    give_info("val_escort_guard" .. idx .. "_dead")
    
    if killer_id == actor_id then
        give_info("val_escort_actor_helped")
    end
    --"on_info     = %-val_escort_guard1_combat +val_escort_guard1_dead%\n" ..
    --"on_info2    = {=killed_by_actor} %+val_escort_actor_helped%\n" ..
end

function val_escort_guard_hit(actor, npc)
    local hitter_id = read_pstor('hitter_id', INVALID_ID, npc)
    if hitter_id == actor_id then
        give_info("val_escort_combat")
        give_info("val_escort_actor_helped")
        if not has_info("val_escort_nap1_start_combat") then
            give_info("val_escort_captive_enemy")
        end
    else
        local npc1 = level.object_by_sid(406)
        if npc1 and hitter_id == npc1:id() then
            give_info("val_escort_combat")
            give_info("val_escort_nap1_start_combat")
        end
    end
    -- local idx = string.sub(npc:name(), -1)
    -- local t = db.storage[npc:id()].hit

    -- if t ~= nil then
        -- if t.who == actor_id then
            -- give_info("val_escort_combat")
            -- give_info("val_escort_actor_helped")
            -- if not has_info("val_escort_nap1_start_combat") then
                -- give_info("val_escort_captive_enemy")
            -- end
        -- else
            -- local npc1 = level.object_by_sid(406)
            -- if npc1 ~= nil and t.who == npc1:id() then
                -- give_info("val_escort_combat")
                -- give_info("val_escort_nap1_start_combat")
            -- else
               -- give_info("val_escort_guard" .. idx .. "_combat")
            -- end
        -- end
    -- end
    --"on_info     = {=hit_by_actor} %+val_escort_combat +val_escort_actor_helped%, %+val_escort_guard1_combat%\n" ..
    --"on_info2    = {+val_escort_combat -val_escort_nap1_start_combat} %+val_escort_captive_enemy%\n" ..
    --"on_info3    = {=hitted_by(406) -val_escort_captive_enemy} %+val_escort_nap1_start_combat%\n" ..
end

function val_escort_guard_combat(actor, npc)
    local idx = string.sub(npc:name(), -1)

    give_info("val_escort_guard" .. idx .. "_combat")
    
    if npc:see(actor) then
        if not has_info("val_escort_nap1_start_combat") then
            give_info("val_escort_captive_enemy")
        end
        give_info("val_escort_combat")
    end
    --"on_info     = %+val_escort_guard1_combat%\n" ..
    --"on_info2    = {=see_actor -val_escort_nap1_start_combat -val_escort_captive_enemy} %+val_escort_captive_enemy%\n" ..
    --"on_info3    = {=see_actor -val_escort_combat} %+val_escort_combat% ;remark@val_escort_guard1_fight\n" ..
end

function val_escort_guard_free(actor, npc)
    --local idx = string.sub(npc:name(), -1)

    give_info("val_escort_guards_free")
    disable_info("val_escort_guard" .. string.sub(npc:name(), -1) .. "_combat")
    --"on_info             = %+val_escort_guards_free -val_escort_guard1_combat%\n"
end


-------------------------------------------------------------------------------------
-- kill
-------------------------------------------------------------------------------------
function killactor (actor, npc)
    npc:set_relation (game_object.enemy, actor)
    --give_info ("mil_bodyguard_kill")
end

function kill(actor, npc)
    npc:kill( npc )
end


-------------------------------------------------------------------------------------
-- Функции для Агропрома
-------------------------------------------------------------------------------------

function agr_krot_sos( actor, npc )
    manager_news.send_message("tips_agr_krot_sos", 0, "krot", 10000 )
end

function agr_krot_sos_1_2( actor, npc )
    if not has_info( "agr_help_krot_start" ) and
       not has_info( "agr_help_krot_done" ) and
       not has_info( "agr_krot_skirmish_start" ) and
       not has_info( "agr_krot_dead" ) and not(m_tasks.agr_actor_enemy())
    then
        give_info( "agr_help_krot_start" )
        manager_news.send_message("tips_agr_krot_sos1", 0, "krot", 10000 )

        if has_info( "agr_help_stalkers_defence_dead" ) then
            manager_news.send_message("tips_agr_krot_sos2", 0, "krot", 10000 )
        end
    end
end

function agr_knockdown ()
    local snd_obj = m_sound.get_safe_sound_object([[affects\tinnitus3a]])
    snd_obj:play_no_feedback(actor, sound_object.s2d, 0, vector(), 1.0)
	assert(not level.get_cam_effector(1974))
    level.add_cam_effector("camera_effects\\earthquake.anm", 1974, false, "")
end

function agr_contuz (actor, npc)
        local sound_obj_l        = m_sound.get_safe_sound_object( [[affects\psy_blackout_l]] )
        local sound_obj_r        = m_sound.get_safe_sound_object( [[affects\psy_blackout_r]] )
        
        sound_obj_l:play_no_feedback(actor, sound_object.s2d, 0, vector():set(-1, 0, 1), 1.0)
        sound_obj_r:play_no_feedback(actor, sound_object.s2d, 0, vector():set( 1, 0, 1), 1.0)
end

function agr_cam_effect ()
	assert(not level.get_cam_effector(123))
    level.add_cam_effector2("camera_effects\\agroprom_doctor_cam.anm", 123, false, "")
end

function agr_hold_enemy(actor, npc) --// почему нельзя просто заагрить гулаг?
    local gulag = m_gulag.get_gulag_by_name("agr_factory_hold")
    
    local h  = hit()
    h.power     = 0.01
    h.direction = vector():set( 1, 0, 0 )
    h.draftsman = actor
    h.impulse   = 1
    h.type      = hit.wound
    
    for k, v in pairs(gulag.Object) do
        if v ~= true and level.object_by_id( k ) ~= nil then
            v:hit( h )
        end
    end    
end
--------------------------------------------------------- 
-- PRIPYAT
--------------------------------------------------------- 
function pri_zombied_in_combat_inc(actor, npc)
    gulag_pripyat.zombied_in_combat[npc:name()] = true
    --printf("effect <pri>: zombied in combat(%s) inc.", npc:name())
end

function pri_zombied_in_combat_dec(actor, npc)
    gulag_pripyat.zombied_in_combat[npc:name()] = nil
    --printf("effect <pri>: zombied in combat(%s) dec.", npc:name())
end

function pri_give_ammo_og7b(actor, npc)
    alife():create("ammo_og-7b", npc:position(), npc:level_vertex_id(), npc:game_vertex_id(), npc:id())
    alife():create("ammo_og-7b", npc:position(), npc:level_vertex_id(), npc:game_vertex_id(), npc:id())
end

-------------------------------------------------------------------------------------
-- Функции для работы с вертолётами
-------------------------------------------------------------------------------------

function heli_set_enemy_actor(actor, npc)
    local st = db.storage[npc:id()]
    if not st.combat.enemy_id and actor:alive() then
        st.combat.enemy_id = actor_id

        m_sound.play_heli_snd( st, "see_enemy", 1 )
    end 
end

function heli_set_enemy(actor, npc, p)
    local st  = db.storage[npc:id()]
    local obj = level.object_by_sid( p[1] )

    if not st.combat.enemy_id and obj:alive() then
        st.combat.enemy_id = obj:id()

        m_sound.play_heli_snd( st, "see_enemy", 1 )
    end
end

function heli_clear_enemy(actor, npc)
    db.storage[npc:id()].combat:forget_enemy()
end

function heli_start_flame(actor, npc)
    bind_heli.heli_start_flame( npc )
end

function heli_die(actor, npc)
    bind_heli.heli_die( npc )
end

-------------------------------------------------------------------------------------
-- Функции для работы с погодными эффектами
-------------------------------------------------------------------------------------
function start_small_reject (actor, npc)
    level.set_weather_fx("surge_day")
	assert(not level.get_pp_effector(1974))
    level.add_pp_effector ("vibros_p.ppe", 1974, false)
    this.aes_earthshake (npc)
end

function start_full_reject (actor, npc)
    level.set_weather_fx ("surge_day")
    level.remove_pp_effector (1974)
	assert(not level.get_pp_effector(1974))
    level.add_pp_effector ("vibros.ppe", 1974, false)
end


function aes_grenade_explode(actor, npc)
    local obj = level.object_by_sid(1101)
    if not obj then return end
    local h = hit();
    h.power = 1000;
    h.direction = vector():set (1, 0, 0);
    h.impulse = 1;
    h.draftsman = obj;
    h.type = hit.chemical_burn;
    obj:hit(h);
end

function aes_kill_actor (actor, npc)
    if actor ~= nil and actor.health > 0 then 
       actor:kill (actor)
    end   
end

function set_sidorovich_animation (npc)
    local sidor = level.object_by_sid (1118)
    if sidor == nil then
       abort ("SIDOROVICH NOT FOUND !!!")
    end
    --sidor:clear_animations ()
    sidor:play_cycle ("wonder", true)
    --sidor:add_animation ("idle_looped", true, false)
end

-- постпроцесс и влияние удара в морду
function aes_earthshake (npc)
    local snd_obj = m_sound.get_safe_sound_object([[ambient\earthquake]])
    snd_obj:play_no_feedback(actor, sound_object.s2d, 0, vector(), 1.0)
	assert(not level.get_cam_effector(1974))
    level.add_cam_effector("camera_effects\\earthquake.anm", 1974, false, "")
    --set_postprocess ("scripts\\earthshake.ltx")
end
-------------------------------------------------------------------------------------
-- Функции для Янтаря
----------------------------------------------------------------------------------
function yan_actor_sleep (actor, npc)
    actor:set_actor_position(patrol("yan_actor_sleep"):point(0))
    local dir = patrol("yan_actor_sleep"):point(1):sub(patrol("yan_actor_sleep"):point(0))
    actor:set_actor_direction(-dir:getH())
end

function yan_actor_sleep_1 (actor, npc)
    actor:set_actor_position(patrol("yan_actor_sleep_1"):point(0))
    local dir = patrol("yan_actor_sleep_1"):point(1):sub(patrol("yan_actor_sleep_1"):point(0))
    actor:set_actor_direction(-dir:getH())
end

function yan_dream_voices (actor, npc)
        local sound_obj_l        = m_sound.get_safe_sound_object( [[characters_voice\scenario\yantar\dream_talk_l]] )
        local sound_obj_r        = m_sound.get_safe_sound_object( [[characters_voice\scenario\yantar\dream_talk_r]] )
        
        sound_obj_l:play_no_feedback(actor, sound_object.s2d, 0, vector():set(-1, 0, 1), 1.0)
        sound_obj_r:play_no_feedback(actor, sound_object.s2d, 0, vector():set( 1, 0, 1), 1.0)
end

function yan_gluk (actor, npc)
        
        local sound_obj_l        = m_sound.get_safe_sound_object( [[affects\psy_blackout_l]] )
        local sound_obj_r        = m_sound.get_safe_sound_object( [[affects\psy_blackout_r]] )
        
        sound_obj_l:play_no_feedback(actor, sound_object.s2d, 0, vector():set(-1, 0, 1), 1.0)
        sound_obj_r:play_no_feedback(actor, sound_object.s2d, 0, vector():set( 1, 0, 1), 1.0)
		assert(not level.get_cam_effector(1974))
		level.add_cam_effector("camera_effects\\earthquake.anm", 1974, false, "")
end

function x18_gluk (actor, npc)
		assert(not level.get_pp_effector(234))
        level.add_pp_effector ("blink.ppe", 234, false)
        local sound_obj_l        = m_sound.get_safe_sound_object( [[affects\psy_blackout_l]] )
        local sound_obj_r        = m_sound.get_safe_sound_object( [[affects\psy_blackout_r]] )
        local snd_obj            = m_sound.get_safe_sound_object( [[affects\tinnitus3a]] )
        snd_obj:play_no_feedback(actor, sound_object.s2d, 0, vector(), 1.0)
        sound_obj_l:play_no_feedback(actor, sound_object.s2d, 0, vector():set(-1, 0, 1), 1.0)
        sound_obj_r:play_no_feedback(actor, sound_object.s2d, 0, vector():set( 1, 0, 1), 1.0)
--		assert(not level.get_cam_effector(1974)) --// Karlan: Таже история
		level.add_cam_effector("camera_effects\\earthquake.anm", 1974, false, "")
end


function yantar_kruglov_talk(actor,npc)
    m_sound.set_sound_play(npc, "rostok_kruglov_help_6")
end

function yantar_professor_spam_1 (actor, npc)
    manager_news.send_message("general_ecolog_tip_1", nil, "saharov", nil, 902)
end

function yantar_professor_spam_2 (actor, npc)
    manager_news.send_message("general_ecolog_tip_2", nil, "saharov", nil, 902)
end

--function yantar_vasilyev_spam (actor, npc)
 --   manager_news.send_message("storyline_vasilyev_tip", nil, "ecolog", nil, 903)
--end
function yan_saharov_message (actor, npc)
    manager_news.send_message("yan_saharov_message", nil, "saharov", nil, 902)
    give_info("labx16_find")
end

function yan_saharov_message_2 (actor, npc)
    manager_news.send_message("yan_saharov_message_2", nil, "saharov", nil, 902)
end
function yan_saharov_message_3 (actor, npc)
    manager_news.send_message("yan_saharov_message_3", nil, "saharov", nil, 902)
end
function yan_ghost_pda (actor, npc)
    if has_info("agr_gunslinger_flash_have") then 
        give_info("yan_provodnik_spawn")
    end
    manager_news.send_message("storyline_ghost_tip", nil, "wolf")
end

function start_yantar_dream(actor, npc)
    game.start_tutorial("yantar_dream")
end

function end_yantar_dream(actor, npc)
    give_info("yantar_find_ghost_task_start")
end
-----------------------------radar
function rad_sos_spam(actor, npc)
    manager_news.send_message("tips_rad_sos_suicide", nil, "stalker", nil, 1004)
end


function monolith_generator_hit (actor, npc)
    printf ("ON GENERATOR HIT !!!")
end


function start_x18_dream(actor, npc)
    game.start_tutorial("x18_dream")
end
function end_x18_dream(actor, npc)
    give_info("dar_x18_dream")
end

function aes_final_movie(actor, npc)
    game.start_tutorial("mov_refuse_osoznanie")
end

-------------------------------------------------------------------------------------
-- Функции для кишок
----------------------------------------------------------------------------------
function kishka_heli_mapspot(actor, npc, p)
    if p[1] and not has_map_spot_by_sid( p[1], "anomaly_zone_location" ) then
        add_map_spot_by_sid( p[1], "anomaly_zone_location", "vertolyot!" )
    end
end

------------------------------------------------------------------------------------
-- Функции для Радара
------------------------------------------------------------------------------------
function rad_psi_hit (actor, npc)
	assert(not level.get_pp_effector(2006))
    level.add_pp_effector ("radar_psi.ppe", 2006, false)
end

function start_radar_dream(actor, npc)
    game.start_tutorial("radar_dream")
end

function end_radar_dream(actor, npc)
    give_info("bun_patrol_start")
end
------------------------------------------------------------------------------------
-- Функции для саркофага
------------------------------------------------------------------------------------
function destroy_monolith_generator(actor, npc)
    local source = nil
    local sim = alife()
    if sim then
       local se_obj = sim:story_object(1305)  
       if se_obj then
          source = level.object_by_id(se_obj.id)
       end
    end

    if source == nil then
       abort ("MONOLITH GENERATOR story id 1305 not found")
       return
    end

    local h = hit ();
    h.power = 1000000;
    h.direction = vector():set( 1, 0, 0 );
    h.impulse = 1;
    h.draftsman = source;
    h.type = hit.chemical_burn;
    source:hit (h);        
end

function sar_monolith_miracle(actor, npc)
    --' Убил лидеров группировок
    if has_info("mil_lukash_dead") and
       has_info("bar_voronin_dead")
    then
        game.start_tutorial("mov_desire_3")
        return
    end

    --' Много денег
    if actor:money() >= 50000 then
        game.start_tutorial("mov_desire_2")    
        return
    end

    --' Хорошая репутация
    if actor:character_reputation() >= 1000 then
        game.start_tutorial("mov_desire_1")    
        return
    end

    --' плохая репутация
    if actor:character_reputation() <= -1000 then
        game.start_tutorial("mov_desire_4")    
        return
    end

    game.start_tutorial("mov_desire_5")    
end

function game_credits(actor, npc)
    db.gameover_credits_started = true
    game.start_tutorial("credits_seq")
end

function game_over(actor, npc)
    if db.gameover_credits_started ~= true then
        return
    end
    local c = get_console()
--    c:execute("disconnect")
    printf("main_menu on console command is executed")
    c:execute("main_menu on")
end

function after_credits()
    if not actor or not has_info('freeplay') then
        if db.gameover_credits_started ~= true then
            return
        end
        local c = get_console()
        c:execute("disconnect")
    elseif not sim:story_object(story_ids.exit_aes2_to_aes) then
        actor:set_actor_position(patrol("aes2_freeplay_start_point"):point(0))
        actor:set_actor_direction(-0.85)
        level.set_weather("default")
        create_level_changer_by_wp("aes2_to_aes_lc_prosectors_1", "aes_to_aes2_if_reject_lc_prosectors_1", 8000, 5, 0, "aes2_to_aes_if_reject_lc_prosectors_1", "level_changer_down", "to_aes")
        create_level_changer_by_wp("aes_to_aes2_lc_prosectors_1", "aes2_to_aes_if_reject_lc_prosectors_1", 8001, 5, 0, "aes_to_aes2_if_reject_lc_prosectors_1", "level_changer_left", "to_aes")
        create_level_changer_by_wp("aes_to_pripyat_lc_prosectors_2", "pri_path_if_reject", 8002, 5, 0, "aes_to_pripyat_if_reject_lc_prosectors_2", "level_changer_down", "to_pripyat")
        db.gameover_credits_started = false
    end
end

function esc_init_dialod () --// когда вырубаем пдашный тутор, то вот это вот срабатывает
    local trader = level.object_by_sid(003)
    actor:run_talk_dialog(trader)
end

function oso_init_dialod ()
    -- local oso = level.object_by_sid(1307)
    -- actor:run_talk_dialog(oso)
end

function change_leader(actor, npc)
    if m_gulag.getGulagPopulation(823) == 0 then
        give_info("pri_followers_all_dead") --// фейлим таск и глушим звуки, так как если все окочурились, кукарекать не кому
    end
end

function on_tutor_gameover_stop()
    local c = get_console()
--    c:execute("disconnect")
    printf("main_menu on console command is executed")
    c:execute("main_menu on")
end

--// Prosectors
function remove_spot_from_logic(_,_, p)
    remove_map_spot_by_sid(p[1], p[2])
end
