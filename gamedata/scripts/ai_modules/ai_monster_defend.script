--[[ ----------------------------------------------------------------------------------------------
 File       : ai_monster_defend.script
 Description: Схема обороны от монстров (combat_planner)
 Copyright  : 2017 © Prosectors Project
 Author(s)  : Rulix aka Bak
 Original   : AI Additions, 27.07.2016
--]] ----------------------------------------------------------------------------------------------

local md_max_dist = 12*15
local md_walk_dist = 9*9
local md_run_dist = 6*6
local md_run_dist_nf = 4*4
local md_min_rank = 0.0/m_ranks.stalker_rank_unit

local md_monsters = {
--	actor = 0,
--	stalker = 0,
	bloodsucker = math.pi*0.25,
	boar = math.pi*0.4,
	burer = 0,
	cat = 0,
	chimera = math.pi*0.15,
--	controller = 0,
	dog = math.pi*0.2,
	flesh = 0,
	fracture = 0,
	pseudo_gigant = 0,
--	poltergeist = 0,
	pseudodog = 0,
	psy_dog = math.pi*0.8,
	psy_dog_phantom = 0,
	snork = math.pi*0.1,
	tushkano = 0,
	zombie = 0,
}

local t = {}
for cls_id,name in pairs(creatures_clslist) do
	t[cls_id] = md_monsters[name] or nil
end
md_monsters = t
t = nil

local function suitable_target(npc,target)
	return target:alive() and target:get_enemy() and md_monsters[target:clsid()] and npc:position():distance_to_sqr(target:position()) < md_max_dist	--npc:max_ignore_monster_distance()
end

class "evaluator_monster_defend" (property_evaluator)
function evaluator_monster_defend:__init(npc_id,storage,name) super (nil,name)
	self.st = storage
	self.st.check_time = 0
	ai_common.subscribe_for_events(npc_id,self)
end
function evaluator_monster_defend:evaluate()
	local npc = self.object
	local be = npc:best_enemy()
	if not (be and npc:best_weapon()) then
		return false
	end
	local tg = time_global()
	local target = self.st.target and level.object_by_id(self.st.target)
	if target and suitable_target(npc,target) and (target:see(npc) or tg-npc:memory_time(target) < 500) then
		return true
	else
		self.st.target = nil
	end
	if self.st.check_time > tg then
		return false
	end
	self.st.check_time = tg+700
	if tg-npc:memory_time(be) < 500 and suitable_target(npc,be) then
		self.st.target = be:id()
--		if npc:position():distance_to(actor:position()) < 5 then logc("[%s] select target %s",npc:name(),be:name()) end
		return true
	end
	return false
end
function evaluator_monster_defend:hit_callback(amount,_,who)
	if who and amount > 0.02 and suitable_target(self.object,who) then
		self.st.target = who:id()
	end
end

class "action_monster_defend" (action_base)
function action_monster_defend:__init (storage,action_name) super (nil,action_name)
	self.st = storage
	self.rand_dif = math.random(-30,30)/100
	self.ddr = math.random() < 0.5 and 1 or -1
end
function action_monster_defend:initialize()
	action_base.initialize(self)
	local npc = self.object
	npc:set_desired_position()
	npc:set_desired_direction()
	npc:set_mental_state(anim.danger)
	npc:set_path_type(game_object.level_path)
	npc:set_dest_level_vertex_id(npc:level_vertex_id())
--	state_mgr.lock(npc,true)
end
function action_monster_defend:execute()
	action_base.execute(self)
	local npc = self.object
	local target = self.st.target and (db.storage[self.st.target] and db.storage[self.st.target].object or level.object_by_id(self.st.target))
	if not target then
		return
	end
	if npc:path_type() ~= game_object.level_path then
		npc:set_path_type(game_object.level_path)
	end
	local wpn = npc:best_weapon()
	if not wpn then
		return
	end

--[[	if wpn:get_weapon().misfire then	--	заклинило?
		if self.weapon_fix_time then
			if self.weapon_fix_time < time_global() then
				self.st.target = nil
				self.st.check_time = time_global()+5000
				return
			end
		else
			self.weapon_fix_time = time_global()+4000
		end
	else
		self.weapon_fix_time = nil
	end]]

	local dist = npc:position():distance_to_sqr(target:position())

	local be = npc:best_enemy()
	if be and be:id() ~= self.st.target and npc:see(be) and suitable_target(npc,be) and npc:position():distance_to_sqr(be:position())+1 < dist then
		self.st.target = be:id()	-- сменится на слудующем апдейте
	end

	-- если мы не в фокусе - прицел на объект
	-- если идем кругом - прицел на объект
	-- если пятимся задом - прицел по направлению

	local target_be = target:get_enemy()
	local focus = target_be and target_be:id() == npc:id()

	if npc:id()%2 == 0 and wpn:get_ammo_in_magazine() == 0 and not npc:path_completed() then
		npc:set_sight(look.path_dir,nil,0)
		npc:set_item(object.aim1,wpn)
	elseif not npc:see(target) then
		npc:set_sight(target,true,false)
		npc:set_item(object.aim1,wpn)
	else
		if focus then
			npc:set_sight(target,true,true)
		else
			npc:set_sight(target,true,true)
		end
		local magsize = wpn:get_weapon().ammo_mag_size
		if magsize == 2 then
			npc:set_item(object.fire1,wpn,math.random(1,2),500)
		else
			math.clamp(magsize,24,60)
			local min_queue,max_queue = math.floor(magsize/6),math.ceil(magsize/3)
			npc:set_item(object.fire1,wpn,math.random(min_queue,max_queue),650)
		end
	end

	if dist < (focus and md_run_dist or md_run_dist_nf) then
		npc:set_movement_type(move.run)
		npc:set_body_state(move.standing)
	elseif dist < md_walk_dist then
		npc:set_movement_type(move.walk)
	else
		return
	end

	if not focus then
		local vertex = self:get_dodge_vertex(npc:level_vertex_id(),target:position(),0,1)
		if vertex then
			npc:set_dest_level_vertex_id(vertex)
		end
		return
	end

	local dodge_angle = md_monsters[target:clsid()]
	if dodge_angle < 0.5 then
		local fire_point = target:bone_position(target:fire_bone())	--	 target:center()	target:bone_position(get_fire_bone(target:section()))
--		fire_point.y = fire_point.y+0.15
		npc:set_sight(look.direction,fire_point:sub(npc:bone_position("bip01_neck")),true)
--		npc:set_sight(look.point,fire_point,true)
	end

	local vertex = self:get_dodge_vertex(npc:level_vertex_id(),target:position(),dodge_angle)
	if not vertex then
		self.ddr = -self.ddr
		self.st.target = nil
		self.st.check_time = time_global()+4000
		return
	end
	npc:set_dest_level_vertex_id(vertex)
end
function action_monster_defend:finalize()
    action_base.finalize(self)
	local npc = self.object
	npc:set_item(object.idle,npc:active_item())
--	state_mgr.lock(npc,false)
	self.weapon_fix_time = nil
end

local _H_step = math.pi/6
function action_monster_defend:get_dodge_vertex(lvid,pos,imod,tc)
	local npc = self.object
	local npc_pos = npc:position()
	local dir = vector():sub(npc:position(),pos)
	local dH,dP,res = dir:getH()+self.rand_dif,dir:getP()
	local found,mod
	imod = imod or 0
	for i=0,(tc or 5) do
		mod = imod > 0 and imod+i*_H_step or imod-i*_H_step
		if mod > 2.6 then
			break
		end
		res = npc:vertex_in_direction(lvid,vector():setHP(dH+mod*self.ddr,dP),4)
		if (lvid ~= res and level.vertex_position(res):distance_to_sqr(npc_pos) > 8) then
			found = true
			break
		end
	end
	return found and res
end
----------------------------------------------------------------------------------------------------------------------
-- BINDER
----------------------------------------------------------------------------------------------------------------------
function init()
	event("presets"):register(presets)
end
function presets()
	event("npc_spawn"):register(add_to_binder)
end

actions_id('monster_defend')
evaluators_id('monster_defend')

function add_to_binder(t)
	if t.obj:character_rank() < md_min_rank then
		return
	end

	local combat_action_planner = t.st.combat_planner
	local storage = t.st.ai('monster_defend')

	combat_action_planner:add_evaluator(evaluators_id.monster_defend,evaluator_monster_defend(t.obj_id,storage,"eva_monster_defend"))
	local new_action = action_monster_defend(storage,"monster_defend")

	new_action:add_precondition(world_property(stalker_ids.property_critically_wounded,false))
	new_action:add_precondition(world_property(stalker_ids.property_danger_grenade,false))
	new_action:add_precondition(world_property(stalker_ids.property_use_suddenness,false))
--	new_action:add_precondition(world_property(stalker_ids.property_ready_to_kill,true))
	new_action:add_precondition(world_property(stalker_ids.property_panic,false))
	new_action:add_precondition(world_property(stalker_ids.property_enemy_wounded,false))
	new_action:add_precondition(world_property(stalker_ids.property_player_on_the_path,false))
	new_action:add_precondition(world_property(stalker_ids.property_friend_on_fire_line,false))
	if evaluators_id.knife_attack then
		new_action:add_precondition(world_property(evaluators_id.knife_attack,false))
	end
	new_action:add_precondition(world_property(stalker_ids.property_pure_enemy,true))
	new_action:add_precondition(world_property(evaluators_id.monster_defend,true))
	new_action:add_effect(world_property(stalker_ids.property_pure_enemy,false))
	new_action:add_effect(world_property(evaluators_id.monster_defend,false))

	combat_action_planner:add_action(actions_id.monster_defend,new_action)
end
