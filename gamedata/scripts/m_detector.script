--[[ ----------------------------------------------------------------------------------------------
 File       : m_detector.script (from xr_detector)
 Description: детектор входа в опасную зону
 Copyright  : 2017 © Prosectors Project
 Author     : Karlan
--]] ----------------------------------------------------------------------------------------------

--//-----------------------------------------------------------------------------------------------
--// Variables
--//-----------------------------------------------------------------------------------------------
local init_time         = -1 --// также исполняет роль 'античита' (раньше было на булевом)
local last_update_time  = -1
--//--------------------
local loaded = false
--//-----------------------------------------------------------------
--// Flags for enable output of the debug information
--//-----------------------------------------------------------------
_DEBUG_ = false --// file under debugging?
_DEBUG_GSC_ = _DEBUG_ and false --// only for scripts by GSC
--//-----------------------------------------------------------------
--//-----------------------------------------------------------------------------------------------
--// Initialization module
--//-----------------------------------------------------------------------------------------------
function init()
    event("presets"):register(presets)
    loaded = true
    log('init:[>]')
end
--//-------------------------
function presets()
    if not loaded then abort('not init!') end
    
    event("actor_enter"):register(actor_enter)
    event("actor_exit"):register(actor_exit)
end
--//-----------------------------------------------------------------------------------------------
--// Global functions
--//-----------------------------------------------------------------------------------------------
--//-----------------------------------------------------------------
--// игрок покидает опасную территорию (входит в разрешенную границу уровня)
--//-----------------------------------------------------------------
function actor_enter()
    level.remove_pp_effector(1001)
    m_sound.set_actor_sound("")
    init_time = -1
    event("actor_update"):unregister(detector_update)
    log('[enter] actor out danger zone')
end
--//-----------------------------------------------------------------
--// игрок входит на опасную территорию (покидает разрешенную границу уровня)
--//-----------------------------------------------------------------
function actor_exit()
    event("actor_update"):register(detector_update)
    init_time = game.get_game_time()
    assert(not level.get_pp_effector(1001))
    level.add_pp_effector("dead_zone.ppe", 1001, true)
    level.set_pp_effector_factor(1001, 0.01)
    m_sound.set_actor_sound("level_border_detector")
    m_sound.set_actor_sound_factor(10)
    last_update_time = game.get_game_time()
    log('[exit] actor in danger zone')
end
--//-----------------------------------------------------------------
--// контроль хита
--//-----------------------------------------------------------------
function detector_update()
    _G.watchdog = make_string('Update is worked: m_detector.detector_update()(%s), last info = %s', delta, last_info)
    m_sound.update_actor()
    if game.get_game_time():diffSec(last_update_time) < 10 then return end
    last_update_time = game.get_game_time()
    --// в зависимости от времени нахождения игрока внутри возрастает интенсивность
    --// интенсивность возрастает от 0 до 1, при достижении порога начинает хитовать радиация
    local intence = math.min(1,math.max(0.01,game.get_game_time():diffSec(init_time)/100))    
    level.set_pp_effector_factor(1001, intence, 0.3)
    m_sound.set_actor_sound_factor(10 - intence*9)
    log("intence = [%s], hit actor is %s", intence, intence>0.2 and 'true' or 'false')
    if intence > 0.2 then
        local h = hit()
        h.draftsman = actor
        h.type = hit.radiation
        h.power = 0.05
        actor:hit(h)    
    end
end
--//-----------------------------------------------------------------
--// Save / Load
--//-----------------------------------------------------------------
function save(pk)
    pk.is_damage = is_userdata(init_time)
end
function load(pk)
    local is_damage = pk.is_damage
    if is_damage then
        actor_exit()
    end
end
--//-----------------------------------------------------------------------------------------------