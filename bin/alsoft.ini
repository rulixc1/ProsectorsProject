# OpenAL config file.
#
# Option blocks may appear multiple times, and duplicated options will take the
# last value specified. Environment variables may be specified within option
# values, and are automatically substituted when the config file is loaded.
# Environment variable names may only contain alpha-numeric characters (a-z,
# A-Z, 0-9) and underscores (_), and are prefixed with $. For example,
# specifying "$HOME/file.ext" would typically result in something like
# "/home/user/file.ext". To specify an actual "$" character, use "$$".
#
# Device-specific values may be specified by including the device name in the
# block name, with "general" replaced by the device name. That is, general
# options for the device "Name of Device" would be in the [Name of Device]
# block, while ALSA options would be in the [alsa/Name of Device] block.
# Options marked as "(global)" are not influenced by the device.
#
# Option and block names are case-senstive. The supplied values are only hints
# and may not be honored (though generally it'll try to get as close as
# possible). Note: options that are left unset may default to app- or system-
# specified values. These are the current available settings:

##
## General stuff
##
[General]

## disable-cpu-exts: (global)
#  Disables use of specialized methods that use specific CPU intrinsics.
#  Certain methods may utilize CPU extensions for improved performance, and
#  this option is useful for preventing some or all of those methods from being
#  used. The available extensions are: sse, sse2, sse3, sse4.1, and neon.
#  Specifying 'all' disables use of all such specialized methods.
#disable-cpu-exts =

## drivers: (global)
#  Sets the backend driver list order, comma-seperated. Unknown backends and
#  duplicated names are ignored. Unlisted backends won't be considered for use
#  unless the list is ended with a comma (e.g. 'oss,' will try OSS first before
#  other backends, while 'oss' will try OSS only). Backends prepended with -
#  won't be considered for use (e.g. '-oss,' will try all available backends
#  except OSS). An empty list means to try all backends.
#drivers =

## channels:
#  Sets the output channel configuration. If left unspecified, one will try to
#  be detected from the system, and defaulting to stereo. The available values
#  are: mono, stereo, quad, surround51, surround51rear, surround61, surround71,
#  ambi1, ambi2, ambi3. Note that the ambi* configurations provide ambisonic
#  channels of the given order (using ACN ordering and SN3D normalization by
#  default), which need to be decoded to play correctly on speakers.
#channels =

## sample-type:
#  Sets the output sample type. Currently, all mixing is done with 32-bit float
#  and converted to the output sample type as needed. Available values are:
#  int8    - signed 8-bit int
#  uint8   - unsigned 8-bit int
#  int16   - signed 16-bit int
#  uint16  - unsigned 16-bit int
#  int32   - signed 32-bit int
#  uint32  - unsigned 32-bit int
#  float32 - 32-bit float
#sample-type = float32

## frequency:
#  Sets the output frequency. If left unspecified it will try to detect a
#  default from the system, otherwise it will default to 44100.
frequency = 44100

## period_size:
#  Sets the update period size, in frames. This is the number of frames needed
#  for each mixing update. Acceptable values range between 64 and 8192.
#period_size = 1024

## periods:
#  Sets the number of update periods. Higher values create a larger mix ahead,
#  which helps protect against skips when the CPU is under load, but increases
#  the delay between a sound getting mixed and being heard. Acceptable values
#  range between 2 and 16.
#periods = 4

## ambi-format:
#  Specifies the channel order and normalization for the "ambi*" set of channel
#  configurations. Valid settings are: fuma, acn+sn3d, acn+n3d
#ambi-format = acn+sn3d

## hrtf-mode:
#  There is an unlisted config option to make all mixing go to B-Format 
#  channels, which get decoded with HRTF for output ('hrtf-mode' set to 'basic').
#  This option is off by default (so sound sources will mix directly with HRTF)
#  full or basic
#hrtf-mode = full

## hrtf-paths:
#  Specifies a comma-separated list of paths containing HRTF data sets. The
#  format of the files are described in docs/hrtf.txt. The files within the
#  directories must have the .mhr file extension to be recognized. By default,
#  OS-dependent data paths will be used. They will also be used if the list
#  ends with a comma. On Windows this is:
#  $AppData\openal\hrtf
#  And on other systems, it's (in order):
#  $XDG_DATA_HOME/openal/hrtf  (defaults to $HOME/.local/share/openal/hrtf)
#  $XDG_DATA_DIRS/openal/hrtf  (defaults to /usr/local/share/openal/hrtf and
#                               /usr/share/openal/hrtf)
hrtf-paths = hrtf

## resampler: (global)
#  Selects the resampler used when mixing sources. Valid values are:
#  point - nearest sample, no interpolation
#  linear - extrapolates samples using a linear slope between samples
#  sinc4 - extrapolates samples using a 4-point Sinc filter
#  sinc8 - extrapolates samples using an 8-point Sinc filter
#  bsinc - extrapolates samples using a band-limited Sinc filter (varying
#          between 12 and 24 points, with anti-aliasing)
#  Specifying other values will result in using the default (linear).
resampler = sinc4

## rt-prio: (global)
#  Sets real-time priority for the mixing thread. Not all drivers may use this
#  (eg. PortAudio) as they already control the priority of the mixing thread.
#  0 and negative values will disable it. Note that this may constitute a
#  security risk since a real-time priority thread can indefinitely block
#  normal-priority threads if it fails to wait. As such, the default is
#  disabled.
#rt-prio = 0

## sources:
#  Sets the maximum number of allocatable sources. Lower values may help for
#  systems with apps that try to play more sounds than the CPU can handle.
sources = 128

##
## Ambisonic decoder stuff
##
[decoder]

## hq-mode:
#  Enables a high-quality ambisonic decoder. This mode is capable of frequency-
#  dependent processing, creating a better reproduction of 3D sound rendering
#  over surround sound speakers. Enabling this also requires specifying decoder
#  configuration files for the appropriate speaker configuration you intend to
#  use (see the quad, surround51, etc options below). Currently, up to third-
#  order decoding is supported.
hq-mode = false

## distance-comp:
#  Enables compensation for the speakers' relative distances to the listener.
#  This applies the necessary delays and attenuation to make the speakers
#  behave as though they are all equidistant, which is important for proper
#  playback of 3D sound rendering. Requires the high-quality ambisonic decoder,
#  as well as the proper distances to be specified in the decoder configuration
#  file.
distance-comp = true

## quad:
#  Decoder configuration file for Quadrophonic channel output. See
#  docs/ambdec.txt for a description of the file format.
quad =

## surround51:
#  Decoder configuration file for 5.1 Surround (Side) channel output. See
#  docs/ambdec.txt for a description of the file format.
surround51 =

## surround51rear:
#  Decoder configuration file for 5.1 Surround (Rear) channel output. See
#  docs/ambdec.txt for a description of the file format.
surround51rear =

## surround61:
#  Decoder configuration file for 6.1 Surround channel output. See
#  docs/ambdec.txt for a description of the file format.
surround61 =

## surround71:
#  Decoder configuration file for 7.1 Surround channel output. See
#  docs/ambdec.txt for a description of the file format. Note: This can be used
#  to enable 3D7.1 with the appropriate configuration and speaker placement,
#  see docs/3D7.1.txt.
surround71 =
